<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Uhrzeit.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////ANrW0//p6Of//////////////////////8XDwv+mop7/4uDe////
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wDs6+rMZWJe/1RRTf9cWVb/fXl2/56Zlf+7trL/h4WC/1lW
        Uv9ZVlL/f358/8XDwv////8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AM/Ny/9cWVb/UU5K/1FOSv9PTEj/TElG/0xJ
        Rv9cWVb/lpGO/6Kdmf+CfXr/WVZS/2ViXv+npqP/7OvqzP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD49/cAtrOz/1lWUv9UUU3/T0xI/0lH
        Q/9UUU3/XFlW/19cWP+Yk4//ysbC/7u2sv+zrqv/jomF/21pZv9ZVlL/fXl2/5aRjv+rqqj/y8nG/+jn
        5v////8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AN3c2v+uqab/WVZS/1RR
        Tf9MSUb/NTMy/6emo/91cW7/XFlW/5iTj//Jw77/ysbC/8nDvv/Cvbr/u7Su/56Zlf99eXb/XFlW/1dU
        UP9PTEj/SUdD/1FOSv91cW7/k46K/7Svt//T0c//8PDvIv///wD///8A////AP///wD///8Awr26/66p
        pv9ZVlL/VFFN/1FOSv89PDr/lpOR/09MSP9UUU3/mJOP/8nDvv/Jw77/ycO+/8nDvv/KxsL/ycO+/7u2
        sv+uqab/jomF/29ua/9ZVlL/V1RQ/1FOSv9PTEj/TElG/09MSP9PTEj/Yl5a/93c2v////8A////AOzr
        6sy1sa7/q6Wi/1RRTf9UUU3/SUdD/z08Ov9FRED/XFlW/1xZVv+Yk4//ycO+/8nDvv/Jw77/ycO+/8nD
        vv/Jw77/ysbC/8nDvv+inZn/k46K/56Zlf97dnP/Yl5a/1RRTf9UUU3/UU5K/1FOSv9RTkr/y8nG////
        /wD///8Ay8nG/7Ouq/+mop7/V1RQ/1RRTf9JR0P/PTw6/0VEQP9qZmP/XFlW/56Zlf/GwLz/ycO+/8nD
        vv/Cvbr/ycO+/7Svt//Cvbr/ycO+/5GKhf9cWVb/Yl5a/315dv+Wk5H/jomF/1lWUv9UUU3/VFFN/1FO
        Sv/GwLz/////APj39wC1sa7/s66r/6Kdmf9UUU3/UU5K/0VEQP84NjX/SUdD/2ViXv9cWVb/npmV/8bA
        vP/GwLz/ysbC/8rGwv/Cvbr/ycO+/8G8wv+0r7f/oJyX/5iTj/9taWb/Yl5a/1lWUv+OiYX/X1xY/1dU
        UP9UUU3/UU5K/767uf////8A3dza/7Ouq/+1sa7/op2Z/1FOSv9RTkr/Q0I+/zg2Nf9JR0P/ZWJe/1xZ
        Vv+gnJf/xsC8/8bAvP+Tjor/0cvG/7u2sv/CvLf/ysbC/8K9uv+Yk4//iIN//4qGgv+HhYL/jomF/46J
        hf9iXlr/V1RQ/1FOSv9RTkr/u7ay/////wDT0c//tbGu/7Wxrv+emZX/T0xI/0lHQ/9APzz/NTMy/0xJ
        Rv9lYl7/WVZS/6Ccl//GwLz/qKOf/2ViXv/KxsL/e3Zz/8K8t//CvLf/wry3/6Ccl/+Yk4//cm1q/21p
        Zv+OiYX/jomF/2JeWv9XVFD/UU5K/1FOSv+0r7f/////ANHNyv+1sa7/tbGu/5aRjv9MSUb/SUdD/0A/
        PP81MzL/TElG/2JeWv9ZVlL/op2Z/9HLxv+inZn/dXFu/8rGwv+emZX/qKOf/7Snlv+8q5r/m5aS/4qG
        gv+Ig3//gn16/46Jhf+KhoL/Yl5a/1RRTf9RTkr/UU5K/7Ouq/////8Ay8nG/7Wxrv+0r7f/kYqF/0lH
        Q/9JR0P/PTw6/zUzMv+mop7/SUdD/1lWUv+mop7/09HP/8K8t/94c2//wry3/5OOiv+RioX/p5Fy/6+T
        bP+Yk4//kYqF/21pZv9taWb/kYqF/4qGgv9iXlr/VFFN/1FOSv9RTkr/q6Wi/////wDCvbr/tbGu/7Ou
        q/+OiYX/RURA/0A/PP9APzz/QD88/7Ouq/9RTkr/VFFN/6ijn//Ry8b/2tbT/4WBff+zrqv/e3Zz/5iT
        j/+kjWr/sJFl/5GKhf+Tjor/ioaC/4J9ev+CfXr/ioaC/2JeWv9RTkr/UU5K/1FOSv+inZn/////AMK9
        uv+1sa7/s66r/4J9ev9FRED/RURA/zo5Nv84NjX/SUdD/1RRTf9UUU3/q6Wi/8bAvP/Jw77/xsC8/8K8
        t/+oo5//u7Su/7KefP+wkWX/k46K/4J9ev9qZmP/bWlm/4qGgv+CfXr/bWlm/1FOSv9RTkr/UU5K/5uW
        kv////8Avbm1/7u0rv+zrqv/fXl2/0VEQP9FRED/Ojk2/zIwL/9JR0P/VFFN/1FOSv+FgX3/tKeW/7Gr
        pv+zrqv/saum/7Grpv/CvLf/u7Su/7Snlv+WkY7/oJyX/4iDf/+CfXr/gn16/4J9ev9taWb/UU5K/1FO
        Sv9PTEj/mJOP/////wC2s7P/tbGu/7Wxrv91cW7/RURA/0VEQP86OTb/MjAv/0xJRv9XVFD/TElG/0xJ
        Rv9XVFD/cm1q/4eFgv+gnJf/qKOf/7Ouq//CvLf/vbm1/5OOiv9iXlr/amZj/3Jtav+WkY7/f358/21p
        Zv9RTkr/T0xI/0xJRv+PjYv/+Pf3ALOuq/+zrqv/s66r/3Jtav9FRED/QD88/z08Ov81MzL/SUdD/0xJ
        Rv9MSUb/UU5K/1FOSv9MSUb/UU5K/1RRTf9taWb/gn16/6Ccl/+rpaL/lpGO/2pmY/9cWVb/X1xY/19c
        WP93dnP/amZj/1FOSv9MSUb/TElG/4eFgv/19fQAs66r/7Ouq/+xq6b/amZj/0VEQP9FRED/Ojk2/zIw
        L/84NjX/PTw6/0VEQP9FRED/RURA/0lHQ/9MSUb/UU5K/1FOSv9RTkr/UU5K/2pmY/+CfXr/lpGO/5aR
        jv97dnP/amZj/3Vxbv9lYl7/T0xI/0xJRv9JR0P/f358//Dw7yK1sa7/s66r/7Ouq/9iXlr/RURA/0VE
        QP86OTb/MjAv/zIwL/81MzL/NTMy/zUzMv86OTb/PTw6/0A/PP9APzz/Q0I+/1dUUP9ZVlL/UU5K/1FO
        Sv9RTkr/Yl5a/3t2c/+OiYX/npmV/2pmY/9PTEj/SUdD/0VEQP93dnP/7OvqzLWxrv+1sa7/tbGu/1xZ
        Vv9DQj7/RURA/z08Ov86OTb/ODY1/zUzMv8yMC//MjAv/zUzMv8yMC//NTMy/zUzMv86OTb/QD88/1FO
        Sv9APzz/Q0I+/0lHQ/9RTkr/UU5K/09MSP9RTkr/T0xI/0xJRv9JR0P/Q0I+/29ua//p6Of/u7Su/7Ou
        q/+0r7f/VFFN/0VEQP9DQj7/RURA/0VEQP9APzz/RURA/0VEQP9APzz/QD88/0A/PP89PDr/NTMy/zg2
        Nf84NjX/NTMy/zUzMv84NjX/ODY1/zg2Nf89PDr/RURA/0xJRv9PTEj/TElG/0lHQ/9APzz/amZj/+Xk
        4//CvLf/u7ay/7u2sv9cWVb/RURA/0A/PP9APzz/RURA/0A/PP9APzz/RURA/0NCPv9DQj7/QD88/0A/
        PP9APzz/Ojk2/0A/PP9APzz/Ojk2/zo5Nv84NjX/ODY1/zUzMv81MzL/NTMy/zUzMv89PDr/QD88/z08
        Ov9iXlr/5eTj/8K8t//CvLf/s66r/315dv97dnP/d3Zz/3Jtav9taWb/Yl5a/1lWUv9ZVlL/V1RQ/09M
        SP9DQj7/QD88/0A/PP9APzz/QD88/0A/PP9APzz/QD88/zo5Nv9APzz/PTw6/z08Ov89PDr/PTw6/zo5
        Nv89PDr/PTw6/1xZVv/l5OP/wr26/8G8wv+emZX/m5aS/5uWkv+blpL/m5aS/56Zlf+emZX/npmV/5iT
        j/+Tjor/iIN//4iDf/+CfXr/fXl2/21pZv9lYl7/WVZS/1RRTf9DQj7/Q0I+/0NCPv89PDr/PTw6/zo5
        Nv89PDr/PTw6/z08Ov89PDr/VFFN/93c2v/BvML/s66r/5uWkv+blpL/npmV/5uWkv+emZX/npmV/56Z
        lf+emZX/npmV/56Zlf+emZX/oJyX/6Ccl/+emZX/npmV/56Zlf+blpL/k46K/5GKhf+Ig3//fXl2/3Jt
        av9qZmP/XFlW/0xJRv9FRED/RURA/z08Ov9MSUb/2tbT/8K9uv+emZX/oJyX/56Zlf+emZX/npmV/56Z
        lf+emZX/npmV/56Zlf+emZX/npmV/56Zlf+emZX/npmV/56Zlf+emZX/npmV/56Zlf+emZX/npmV/56Z
        lf+emZX/m5aS/5uWkv+blpL/lpOR/5OOiv+KhoL/gn16/5aTkf/V1NP/q6Wi/6Ccl/+gnJf/npmV/56Z
        lf+emZX/npmV/56Zlf+emZX/npmV/6Ccl/+gnJf/npmV/6Ccl/+gnJf/oJyX/6Ccl/+gnJf/npmV/6Cc
        l/+emZX/npmV/56Zlf+emZX/npmV/56Zlf+emZX/m5aS/56Zlf/Pzcv/////AMrGwv+emZX/oJyX/56Z
        lf+emZX/npmV/6Ccl/+gnJf/oJyX/6Ccl/+gnJf/oJyX/6Ccl/+gnJf/oJyX/6Ccl/+gnJf/oJyX/6Cc
        l/+gnJf/oJyX/6Ccl/+emZX/oJyX/56Zlf+emZX/npmV/56Zlf+npqP/6Ofm/////wD///8A1dTT/767
        uf+2s7P/rqmm/6ainv+inZn/op2Z/6Kdmf+inZn/op2Z/6Kdmf+gnJf/op2Z/6Kdmf+inZn/op2Z/6Cc
        l/+mop7/op2Z/6Ccl/+mop7/npmV/56Zlf+mop7/op2Z/6Kdmf+gnJf/u7ay//X19AD///8A////AP//
        /wD///8A////AP///wD///8A////APj39wDw8O8i6ejn/+Lg3v/a1tP/0c3K/8XDwv++u7n/tbGu/66p
        pv+mop7/pqKe/6Kdmf+gnJf/pqKe/6ainv+mop7/op2Z/6ainv+inZn/op2Z/9PRz/////8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD19fQA7OvqzOXk4//d3Nr/0c3K/8rGwv/GwLz/u7ay/7u2sv/o5+b/////AP//
        /wD///8A////AP///wD///8A+AP///AA///wAB//8AAA/+AAAAfgAAAAwAAAAMAAAADAAAAAgAAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAMAAAAP/gAAH///gD8=
</value>
  </data>
</root>